# online notes:
http://docs.google.com/Doc?id=dcbqdgdz_92chvjzvdz


* ESP: this project would rather be a script for execution instead of a module.


* What's difficult?
hint: only use 


*
Q: how to write test cases(e.g. use mocking) for unit test?
especially for preventing data corruption.
A:


*
Q: 


* Hint: if the API is not mature, do not try to wrap in class? 
adv. non-obj dependent, stateless.
disadv. no-concept-of-class,e.g. method classification, 




2009.12.28
* TODO: test out the 'add empty directory' 
* Q: why AB's checkout(also other SCM tools ) provide comment for checkout?
  A: 
  
* Q: In AB, each file has an individual 'Version Comment'(see from 'Change Set Details'), what's the corresponding info in the P4?
  A: 

* Q: what's the use for renaming a pending changeset? 
  A: 
  




2009.12.29
* Q: how to script 'ab import' without submit a changeset?
  A: 
  
* try to introduce the logging/documentation system for the project, as standard/main-stream practices!
	see:    http://onlamp.com/pub/a/python/2005/06/02/logging.html
	 
* AFM: 
  research what prevent the practice of 'generating program structure/content from well-format program'? unforeseen design change? difference in design and implementation?
  i think it's quite useful to do with it give a unix command line utilities, 
  also in the view of AOP,  
  
  also for the benefit of later comers, should not rewalk the experiment/knowledge tree building as the predecessors if they don't want know the inner deep secret without 
  first familiarity. 
  
  
* Q: do I have to put all the concepts in the command line into first class citizen? it may take more efforts! The benefit is everything looks more clear, but the LOC is increasing
  A: 

* how that happens?
D:\zjc\wr2\p42ab.py\src>ab checkout D:\p4migtest\projectA\b.txt
Could not find "D:\p4migtest\projectA\b.txt" at the given path.


2009.12.30
* for each ab command, must capture the non-ok return value, e.g. connection failed, change set op failed.


* solution for atomic operations,


scenario#1: 
    ..logon [OK]
    	.. create_default_chgset[FAIL]
    	>> force create or stop?
    	
scenario#2:
	..logon [OK]   
		.. create_default_chgset[OK]
			.. each file/dir add/delete/edit action * N [FAILED]  # SUG: since that changelist will be not complete thus all the modification in that changelist should be removed. 


sln#1, we can record the history of the operations, and force each operation should have a reversed operation corresponded, so if error occurs, just call those ones.
     ... e.g. http://www.google.com/codesearch/p?hl=en#NsPYB2CqBp8/pisi/pisi/atomicoperations.py&q=lang:python%20atomic%20operation&sa=N&cd=5&ct=rc  
	 ... adv: easy to imple
	 ... disa:  if the commands are grouped like a tree, the reversed ops are difficult to call in correct sequence.


sln#2,


* TODO:  device unit test or mock object for it!


  
2010.1.4
* python, research on unit-test method for command line wrapper program

* Q: there is a problem, when import a newly created directory, the files below will also auto imported, 
since I am trying to import dirctory from a new file below, either I aborted the file importation
or IS there any where to specify just dirctory?



2010.1.5
* from local p4 server, mig of cl#6 has no effect on ab, the version of file does not change at all. 
 even though the status change be view in the GUI, with cmds "ab checkout D:/p4migtest/demobox/a.txt", "ab submitpendingchanges",
 the history of file and changeset can not be found!
 This creates a problem of if the p4 change has no modified file, but a check-out/check-in action, ab won't recognize.
 Q: can I use check-in when there are only 'edit' one from p4 server.
 A: no, also can not show a version increment
 IDEA: 
 * ^_^ neglect the unmodified file, adv: , disadv: file version won't change and won't record the related info from changelist of p4 as its comment; 
 * add a blank space at the end of file? adv: explict change goes into changeset, file ver. will change and record p4 changelist info.
 
* ESP.SUG. 
  it looks that writing unit-tests is not quite hard, but very useful.
  there are many benefits:
  > ensure function work properly even after some modification.
  > no need of tons of debug logging.
  
   --- Scenario ---
   1. if parent folder needs importing, by default all the files underneath are imported, try to eliminize the command call when 

   2. session timeout
   
   
      
   
* It would be nice to get a table of function comparison between SVN, Perforce and Alienbrain!    
    

* ESP. it looks like the alienbrain command will take much time in migration, make demo to show it won't ask session relogin during the migration.
 